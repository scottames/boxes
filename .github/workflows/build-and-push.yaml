name: "Build and push images"
on:
  push:
    branches:
      - main
    paths:
      - toolbox/**
      - .github/workflows/build-and-push.yaml
  schedule:
    - cron: "0 0 * * TUE"
concurrency: ${{ github.workflow }}
env:
  REGISTRY_DOMAIN: ghcr.io
  REGISTRY_OWNER: ${{ github.repository_owner }}
jobs:
  build-and-push:
    name: Build and push image
    runs-on: ubuntu-latest
    permissions:
      contents: read
      packages: write
      id-token: write
    strategy:
      fail-fast: false
      matrix:
        include:
          - context: ./toolbox/archlinux
            image: archlinux-toolbox
            distro: archlinux
            image_pretty: Arch Linux - Toolbox
    steps:
      - name: Checkout
        uses: actions/checkout@v3
      - name: Metadata
        uses: docker/metadata-action@v4
        id: meta
        with:
          images: |
            ${{ matrix.image }}
      - name: Generate tags
        id: generate_tags
        shell: bash
        run: |
          TIMESTAMP="$(date +%Y%m%d)"
          COMMIT_TAGS=()
          BUILD_TAGS=()
          SHA_SHORT="${GITHUB_SHA::7}"
          BUILD_TAGS+=("${TIMESTAMP}")
          BUILD_TAGS+=("latest")
          COMMIT_TAGS+=("pr-${{ github.event.number }}")
          COMMIT_TAGS+=("${SHA_SHORT}")

          if [[ "${{ github.event_name }}" == "pull_request" ]]; then
              echo "=> Generated the following commit tags: "
              for TAG in "${COMMIT_TAGS[@]}"; do
                  echo "    ${TAG}"
              done
              alias_tags=("${COMMIT_TAGS[@]}")
          else
              alias_tags=("${BUILD_TAGS[@]}")
          fi
          echo "=> Generated the following build tags: "
          for TAG in "${BUILD_TAGS[@]}"; do
              echo "    ${TAG}"
          done
          echo "alias_tags=${alias_tags[*]}" >> $GITHUB_OUTPUT
      - name: Build
        id: build_image
        uses: redhat-actions/buildah-build@v2
        with:
          containerfiles: |
            ${{ matrix.context }}/Containerfile
          context: ${{ matrix.context }}
          image: ${{ matrix.image }}
          tags: |
            ${{ steps.generate_tags.outputs.alias_tags }}
          labels: ${{ steps.meta.outputs.labels }}
          oci: false
      # Workaround bug where capital letters in your GitHub username make it
      # impossible to push to GHCR.
      # https://github.com/macbre/push-to-ghcr/issues/12
      - name: Lowercase Registry
        if: github.event_name != 'pull_request' && github.ref == 'refs/heads/main'
        id: registry_case
        uses: ASzc/change-string-case-action@v5
        with:
          string: ${{ env.REGISTRY_DOMAIN }}/${{ env.REGISTRY_OWNER }}
      - name: Push
        if: github.event_name != 'pull_request' && github.ref == 'refs/heads/main'
        uses: redhat-actions/push-to-registry@v2
        id: push
        env:
          REGISTRY_USER: ${{ github.actor }}
          REGISTRY_PASSWORD: ${{ github.token }}
        with:
          image: ${{ steps.build_image.outputs.image }}
          tags: ${{ steps.build_image.outputs.tags }}
          registry: ${{ steps.registry_case.outputs.lowercase }}
          username: ${{ env.REGISTRY_USER }}
          password: ${{ env.REGISTRY_PASSWORD }}
          extra-args: |
            --disable-content-trust
      - name: Login to Registry
        if: github.event_name != 'pull_request' && github.ref == 'refs/heads/main'
        uses: docker/login-action@v2
        with:
          registry: ${{ env.REGISTRY_DOMAIN }}
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}
      # Sign container
      - name: Install Cosign
        if: github.event_name != 'pull_request' && github.ref == 'refs/heads/main'
        uses: sigstore/cosign-installer@v3
      - name: Sign container image
        if: github.event_name != 'pull_request' && github.ref == 'refs/heads/main'
        run: |
          cosign sign -y --key env://COSIGN_PRIVATE_KEY \
            ${{ steps.registry_case.outputs.lowercase }}/${{ matrix.image }}@${TAGS}
        env:
          TAGS: ${{ steps.push.outputs.digest }}
          COSIGN_EXPERIMENTAL: false
          COSIGN_PRIVATE_KEY: ${{ secrets.COSIGN_PRIVATE_KEY }}
          COSIGN_PASSWORD: ${{ secrets.COSIGN_PASSWORD }}
          COSIGN_PUBLIC_KEY: ${{ secrets.COSIGN_PUBLIC_KEY }}
      - name: Outputs
        if: github.event_name != 'pull_request' && github.ref == 'refs/heads/main'
        run: |
          echo "${{ toJSON(steps.push.outputs) }}"
